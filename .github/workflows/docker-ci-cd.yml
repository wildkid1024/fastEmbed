name: Docker CI/CD

# 触发条件：仅手动触发
on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：检出代码
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # 步骤2：设置Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 步骤3：验证DockerHub凭证是否存在
      - name: Check DockerHub credentials
        id: check_credentials
        run: |
          if [[ -z "${{ secrets.DOCKERHUB_USERNAME }}" || -z "${{ secrets.DOCKERHUB_TOKEN }}" ]]; then
            echo "DOCKERHUB_CREDENTIALS_AVAILABLE=false" >> $GITHUB_ENV
          else
            echo "DOCKERHUB_CREDENTIALS_AVAILABLE=true" >> $GITHUB_ENV
          fi

      # 步骤4：登录到Docker镜像仓库 (仅当凭证可用时)
      - name: Login to DockerHub
        if: env.DOCKERHUB_CREDENTIALS_AVAILABLE == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 步骤5：构建并推送Docker镜像
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ env.DOCKERHUB_CREDENTIALS_AVAILABLE == 'true' }}
          tags: |
            ${{ env.DOCKERHUB_CREDENTIALS_AVAILABLE == 'true' && ${{ secrets.DOCKERHUB_USERNAME }}/fastembed-server:${{ github.sha }}' || 'fastembed-server:local' }}
            ${{ env.DOCKERHUB_CREDENTIALS_AVAILABLE == 'true' && ${{ secrets.DOCKERHUB_USERNAME }}/fastembed-server:latest' || '' }}
          build-args: |
            USE_CUDA=ON
            USE_SERVER=ON

      # 步骤6：显示构建结果信息
      - name: Show build result
        run: |
          if [[ "${{ env.DOCKERHUB_CREDENTIALS_AVAILABLE }}" == "true" ]]; then
            echo "✅ Docker image was built and pushed to DockerHub as ${{ secrets.DOCKERHUB_USERNAME }}/fastembed-server"
          else
            echo "⚠️ Docker image was built locally as 'fastembed-server:local' but not pushed (missing DockerHub credentials)"
            echo "To enable pushing to DockerHub, set the DOCKERHUB_USERNAME and DOCKERHUB_TOKEN secrets in your repository settings"
          fi